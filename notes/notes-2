
ps -ef --> all process in Linux


foreground and background
------------------------------
foreground process blocks the terminal until its completes 

ex: sleep 200

background
----------

"&" will take the process in to the background
ex: sleep 200 &

-----------------------------------------------------------------------

ps -ef | grep sleep ---> to check sleep procees running or not
ps -ef | grep sleep | grep -v grep -----> it will remove grep one


[swathi@ip-172-31-17-109 ~]$ sleep 200 &
[1] 2632
[swathi@ip-172-31-17-109 ~]$ ps -ef | grep sleep
swathi      2632    2301  0 04:06 pts/0    00:00:00 sleep 200
swathi      2634    2301  0 04:06 pts/0    00:00:00 grep --color=auto sleep
[swathi@ip-172-31-17-109 ~]$ ps -ef | grep sleep | grep -v grep
swathi      2632    2301  0 04:06 pts/0    00:00:00 sleep 200
[swathi@ip-172-31-17-109 ~]$ kill -9 2632
[1]+  Killed                  sleep 200
[swathi@ip-172-31-17-109 ~]$ ps -ef | grep sleep | grep -v grep


------------------------------------------------------------------

kill the existing process, and restart the service....

kill vs kill -9

kill -> request to end --> graceful termination
kill -9 --> order to end --> forceful termination

top --> all running process with CPU and RAM

Network management
------------------
How to check a port is opened or not in linux
netstat -ltnp --> listdown the tcp opened ports and their PID

------------------------------------------------------------------


username and password 
----------------------

AMI-->amazon machine image ----->Red hat-->devops-pratice--->us-east-1region

ec2-user--->username
DevOps321--->password

use AMI you will get all packages

-------------------------------------------------------------------


RDBMS----> relational database management system table and column based data



-----------------------------------------------------------------------------------------------------------------------------------------------

mysql--->db 
 first thing we need to use this commands

# MySQL

Developer has chosen the database MySQL. Hence, we are trying to install it up and configure it.

**Versions of the DB Software you will get context from the developer, Meaning we need to check with developer.**

Install MySQL Server 8.0.x

```
dnf install mysql-server -y
```

Start MySQL Service

```
systemctl enable mysqld
```
```
systemctl start mysqld
```

Next, We need to change the default root password in order to start using the database service. Use password ExpenseApp@1 or any other as per your choice.

```
mysql_secure_installation --set-root-pass Chintu@123
```
That's all

----------------------------------------------------------------------------------------------------

after that checking MySQL running or not use this below commands

systemctl status mysqld --> to check the status





[ root@ip-172-31-24-24 /home/ec2-user/.ssh ]# netstat -lntp
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1219/sshd: /usr/sbi
tcp6       0      0 :::33060                :::*                    LISTEN      14066/mysqld
tcp6       0      0 :::22                   :::*                    LISTEN      1219/sshd: /usr/sbi
tcp6       0      0 :::3306                 :::*                    LISTEN      14066/mysqld



mysql--->3306 run in this port


[ root@ip-172-31-24-24 /home/ec2-user/.ssh ]# ps -ef | grep mysql
mysql      14066       1  0 05:01 ?        00:00:01 /usr/libexec/mysqld --basedi                                                                                                             r=/usr
root       14130    1358  0 05:04 pts/0    00:00:00 grep --color=auto mysql


54.221.146.241 | 172.31.24.24 | t2.micro | null
[ root@ip-172-31-24-24 /home/ec2-user/.ssh ]# mysql
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 10
Server version: 8.0.36 Source distribution

Copyright (c) 2000, 2024, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.


mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

-------------------------------------------------------------------------------------

### Backend
Backend service is responsible for adding the given values to database. Backend service is written in NodeJS, Hence we need to install NodeJS.

**Developer has chosen NodeJs, Check with developer which version of NodeJS is needed. Developer has set a context that it can work with NodeJS >20**

Install NodeJS, By default NodeJS 16 is available, We would like to enable 20 version and install this.

**You can list modules by using dnf module list**

we nee dot check "dnf module list" which node we are 

```
dnf module disable nodejs -y
```
```
dnf module enable nodejs:20 -y
```

```
dnf install nodejs -y
```

Configure the application.

Add application User
```
useradd expense
```

User expense is a function / daemon user to run the application. Apart from that we don't use this user to login to server.

Also, username expense has been picked because it more suits to our project name.

We keep application in one standard location. This is a usual practice that runs in the organization.

Lets setup an app directory.

```
mkdir /app
```

Download the application code to created app directory.

```
curl -o /tmp/backend.zip https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
```
```
cd /app
```
```
unzip /tmp/backend.zip
```

Every application is developed by development team will have some common softwares that they use as libraries. This application also have the same way of defined dependencies in the application configuration.

Lets download the dependencies.

```
cd /app
```
```
npm install
```

We need to setup a new service in systemd so systemctl can manage this service

Setup SystemD Expense Backend Service
```
vim /etc/systemd/system/backend.service
```

```
[Unit]
Description = Backend Service

[Service]
User=expense
Environment=DB_HOST="<MYSQL-SERVER-IPADDRESS>"
ExecStart=/bin/node /app/index.js
SyslogIdentifier=backend

[Install]
WantedBy=multi-user.target
```

**NOTE: Ensure you replace <MYSQL-SERVER-IPADDRESS> with IP address** need to give private ip address

Load the service.

```
systemctl daemon-reload
```

Start the service.
```
systemctl start backend
```
```
systemctl enable backend
```

For this application to work fully functional we need to load schema to the Database.

We need to load the schema. To load schema we need to install mysql client.

To have it installed we can use

```
dnf install mysql -y
```

Load Schema

```
mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pExpenseApp@1 < /app/schema/backend.sql
```

Restart the service.
```
systemctl restart backend